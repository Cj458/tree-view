{"ast":null,"code":"export async function fetchData() {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_PREFIX}/api/departments/`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    console.log(`Back URL: ${REACT_APP_BACKEND_PREFIX}`);\n    return data.results;\n  } catch (error) {\n    console.error('Fetch data failed:', error);\n    return [];\n  }\n}\nexport async function fetchEmployees(departmentId) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  try {\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_PREFIX}/api/departments/${departmentId}/employees/?page=${page}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Fetch employees failed:', error);\n    return {\n      results: [],\n      next: null\n    };\n  }\n}","map":{"version":3,"names":["fetchData","response","fetch","process","env","REACT_APP_BACKEND_PREFIX","ok","Error","data","json","console","log","results","error","fetchEmployees","departmentId","page","arguments","length","undefined","next"],"sources":["/Users/caleb/Desktop/Projects/CRM/frontend/src/data.js"],"sourcesContent":["export async function fetchData() {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_PREFIX}/api/departments/`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    console.log(`Back URL: ${REACT_APP_BACKEND_PREFIX}`);\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    console.error('Fetch data failed:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function fetchEmployees(departmentId, page = 1) {\r\n  try {\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_PREFIX}/api/departments/${departmentId}/employees/?page=${page}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Fetch employees failed:', error);\r\n    return { results: [], next: null };\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAO,eAAeA,SAASA,CAAA,EAAG;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,mBAAmB,CAAC;IACxF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,aAAaN,wBAAwB,EAAE,CAAC;IAEpD,OAAOG,IAAI,CAACI,OAAO;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,EAAE;EACX;AACF;AAEA,OAAO,eAAeC,cAAcA,CAACC,YAAY,EAAY;EAAA,IAAVC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACzD,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,oBAAoBU,YAAY,oBAAoBC,IAAI,EAAE,CAAC;IAC/H,IAAI,CAACf,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO;MAAED,OAAO,EAAE,EAAE;MAAEQ,IAAI,EAAE;IAAK,CAAC;EACpC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}