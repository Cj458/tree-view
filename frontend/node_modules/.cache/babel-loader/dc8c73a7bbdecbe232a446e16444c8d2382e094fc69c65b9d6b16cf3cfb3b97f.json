{"ast":null,"code":"export async function fetchData() {\n  try {\n    const response = await fetch('http://127.0.0.1:8000/api/departments/');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.error('Fetch data failed:', error);\n    return [];\n  }\n}\nexport async function fetchEmployees(departmentId) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  try {\n    const response = await fetch(`${process.env.BACKEND_PREFIX}/api/departments/${departmentId}/employees/?page=${page}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Fetch employees failed:', error);\n    return {\n      results: [],\n      next: null\n    };\n  }\n}","map":{"version":3,"names":["fetchData","response","fetch","ok","Error","data","json","results","error","console","fetchEmployees","departmentId","page","arguments","length","undefined","process","env","BACKEND_PREFIX","next"],"sources":["/Users/caleb/Desktop/Projects/CRM/frontend/src/data.js"],"sourcesContent":["\r\nexport async function fetchData() {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8000/api/departments/');\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data.results;\r\n  } catch (error) {\r\n    console.error('Fetch data failed:', error);\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function fetchEmployees(departmentId, page = 1) {\r\n  try {\r\n    const response = await fetch(`${process.env.BACKEND_PREFIX}/api/departments/${departmentId}/employees/?page=${page}`);\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Fetch employees failed:', error);\r\n    return { results: [], next: null };\r\n  }\r\n}\r\n"],"mappings":"AACA,OAAO,eAAeA,SAASA,CAAA,EAAG;EAChC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;IACtE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,EAAE;EACX;AACF;AAEA,OAAO,eAAeE,cAAcA,CAACC,YAAY,EAAY;EAAA,IAAVC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EACzD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGc,OAAO,CAACC,GAAG,CAACC,cAAc,oBAAoBP,YAAY,oBAAoBC,IAAI,EAAE,CAAC;IACrH,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO;MAAED,OAAO,EAAE,EAAE;MAAEY,IAAI,EAAE;IAAK,CAAC;EACpC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}